{"id":"../node_modules/date-fns/esm/isValid/index.js","dependencies":[{"name":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\package.json","includedInParent":true,"mtime":1658869702484},{"name":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\package.json","includedInParent":true,"mtime":1658867187583},{"name":"../isDate/index.js","loc":{"line":1,"column":19,"index":19},"parent":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\isDate\\index.js"},{"name":"../toDate/index.js","loc":{"line":2,"column":19,"index":60},"parent":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\toDate\\index.js"},{"name":"../_lib/requiredArgs/index.js","loc":{"line":3,"column":25,"index":107},"parent":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\isValid\\index.js","resolved":"D:\\GitHub\\frontend-with-packages\\will-it-miss\\node_modules\\date-fns\\esm\\_lib\\requiredArgs\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isValid;\n\nvar _index = _interopRequireDefault(require(\"../isDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid(dirtyDate) {\n  (0, _index3.default)(1, arguments);\n\n  if (!(0, _index.default)(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = (0, _index2.default)(dirtyDate);\n  return !isNaN(Number(date));\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":4,"column":0}},{"generated":{"line":17,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":5,"column":0}},{"generated":{"line":18,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":6,"column":0}},{"generated":{"line":19,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":7,"column":0}},{"generated":{"line":20,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":8,"column":0}},{"generated":{"line":21,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":9,"column":0}},{"generated":{"line":22,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":10,"column":0}},{"generated":{"line":23,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":11,"column":0}},{"generated":{"line":24,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":12,"column":0}},{"generated":{"line":25,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":14,"column":0}},{"generated":{"line":27,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":15,"column":0}},{"generated":{"line":28,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":16,"column":0}},{"generated":{"line":29,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":17,"column":0}},{"generated":{"line":30,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":18,"column":0}},{"generated":{"line":31,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":19,"column":0}},{"generated":{"line":32,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":20,"column":0}},{"generated":{"line":33,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":21,"column":0}},{"generated":{"line":34,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":22,"column":0}},{"generated":{"line":35,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":23,"column":0}},{"generated":{"line":36,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":24,"column":0}},{"generated":{"line":37,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":25,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":26,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":27,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":28,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":29,"column":0}},{"generated":{"line":42,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":30,"column":0}},{"generated":{"line":43,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":31,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":32,"column":0}},{"generated":{"line":45,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":33,"column":0}},{"generated":{"line":46,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":34,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":15}},{"generated":{"line":47,"column":9},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":24},"name":"isValid"},{"generated":{"line":47,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":15}},{"generated":{"line":47,"column":17},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":32},"name":"dirtyDate"},{"generated":{"line":47,"column":26},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":15}},{"generated":{"line":47,"column":28},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":36,"column":43}},{"generated":{"line":48,"column":2},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2}},{"generated":{"line":48,"column":6},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2},"name":"requiredArgs"},{"generated":{"line":48,"column":21},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2}},{"generated":{"line":48,"column":23},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":15}},{"generated":{"line":48,"column":24},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2}},{"generated":{"line":48,"column":26},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":18},"name":"arguments"},{"generated":{"line":48,"column":35},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":37,"column":2}},{"generated":{"line":50,"column":2},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":2}},{"generated":{"line":50,"column":6},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":6}},{"generated":{"line":50,"column":7},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":7}},{"generated":{"line":50,"column":11},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":7},"name":"isDate"},{"generated":{"line":50,"column":25},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":7}},{"generated":{"line":50,"column":27},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":14},"name":"dirtyDate"},{"generated":{"line":50,"column":36},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":7}},{"generated":{"line":50,"column":37},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":6}},{"generated":{"line":50,"column":41},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":28}},{"generated":{"line":50,"column":48},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":35},"name":"dirtyDate"},{"generated":{"line":50,"column":57},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":28}},{"generated":{"line":50,"column":62},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":49}},{"generated":{"line":50,"column":70},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":2}},{"generated":{"line":50,"column":72},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":39,"column":59}},{"generated":{"line":51,"column":4},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":4}},{"generated":{"line":51,"column":11},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":11}},{"generated":{"line":51,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":40,"column":4}},{"generated":{"line":52,"column":2},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":41,"column":3}},{"generated":{"line":54,"column":2},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":2}},{"generated":{"line":54,"column":6},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":6},"name":"date"},{"generated":{"line":54,"column":10},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":10}},{"generated":{"line":54,"column":13},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":13}},{"generated":{"line":54,"column":17},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":13},"name":"toDate"},{"generated":{"line":54,"column":32},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":13}},{"generated":{"line":54,"column":34},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":20},"name":"dirtyDate"},{"generated":{"line":54,"column":43},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":13}},{"generated":{"line":54,"column":44},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":43,"column":2}},{"generated":{"line":55,"column":2},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":2}},{"generated":{"line":55,"column":9},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":9}},{"generated":{"line":55,"column":10},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":10},"name":"isNaN"},{"generated":{"line":55,"column":15},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":15}},{"generated":{"line":55,"column":16},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":16},"name":"Number"},{"generated":{"line":55,"column":22},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":22}},{"generated":{"line":55,"column":23},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":23},"name":"date"},{"generated":{"line":55,"column":27},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":22}},{"generated":{"line":55,"column":28},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":15}},{"generated":{"line":55,"column":29},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":44,"column":2}},{"generated":{"line":56,"column":0},"source":"../node_modules/date-fns/esm/isValid/index.js","original":{"line":45,"column":1}}],"sources":{"../node_modules/date-fns/esm/isValid/index.js":"import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}"},"lineCount":null}},"error":null,"hash":"97695c9c3e9dc78cf4ad2e99b322eafd","cacheData":{"env":{}}}